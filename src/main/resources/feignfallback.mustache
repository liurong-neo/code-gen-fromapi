package {{feignFallBackPackage}};

import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.alibaba.fastjson.JSON;
import com.fzm.baas.base.model.BaaSException;
import com.fzm.baas.base.model.Result;
import com.fzm.baas.base.model.quickquery.QuickQueryModel;
import lombok.extern.slf4j.Slf4j;
import org.springframework.cloud.openfeign.FallbackFactory;
import org.springframework.stereotype.Component;
import {{feignPackage}}.{{className}}Api;
{{#needImportModule}}import {{modelPackage}}.*;{{/needImportModule}}
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.springframework.web.multipart.MultipartFile;
import com.fzm.baas.base.model.PageResult;
@Slf4j
@Component
public class {{className}}{{versionName}}FeignFallBackFactory  implements FallbackFactory<{{className}}Api> {
    @Override
    public {{className}}Api create(Throwable throwable) {
        return new {{className}}Api() {
            {{#pathGetEntityList}}
                @Override
                public {{^responseType}}Result{{/responseType}}{{#responseType}}Result<{{&responseType}}>{{/responseType}} {{methodName}}({{#params}}{{paramType}} {{paramName}}{{/params}} {{#queryParams}}{{paramType}} {{paramName}}{{/queryParams}})  {
                    return getResult(throwable);
                }
            {{/pathGetEntityList}}

            {{#pathDeleteEntityList}}
                @Override
                public {{^responseType}}Result{{/responseType}}{{#responseType}}Result<{{&responseType}}>{{/responseType}} {{methodName}}({{#params}}{{paramType}} {{paramName}}{{/params}})  {
                    return getResult(throwable);
                }
            {{/pathDeleteEntityList}}

            {{#pathPostEntityList}}
                @Override
                public {{^responseType}}Result{{/responseType}}{{#responseType}}Result<{{&responseType}}>{{/responseType}} {{methodName}}({{#params}}{{&paramType}} {{paramName}}{{/params}})  {
                    return getResult(throwable);
                }
            {{/pathPostEntityList}}

            {{#pathPutEntityList}}
                @Override
                public {{^responseType}}Result{{/responseType}}{{#responseType}}Result<{{&responseType}}>{{/responseType}} {{methodName}}({{#params}}{{&paramType}} {{paramName}}{{/params}})  {
                    return getResult(throwable);
                }
            {{/pathPutEntityList}}

        };
    }

    private Result getResult(Throwable throwable){
        Result result = JSON.parseObject(throwable.getCause().getMessage(), Result.class);
        return result;
    }

}